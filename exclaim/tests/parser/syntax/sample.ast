<Ast>
  <BlockNode>
    <stmt>
      <LetStatement>
        <assignee>
          <SimplePattern>
            <decl>
              <Token>
                <kind>Label</kind>
                <lexeme>"cart"</lexeme>
                <location>{ 0, 8 }</location>
              </Token>
            </decl>
          </SimplePattern>
        </assignee>
        <expr>
          <ReferenceExpression>
            <reference>
              <Token>
                <kind>Label</kind>
                <lexeme>"user"</lexeme>
                <location>{ 0, 15 }</location>
              </Token>
            </reference>
            <child>
              <Option>
                <ReferenceExpression>
                  <reference>
                    <Token>
                      <kind>Label</kind>
                      <lexeme>"cart"</lexeme>
                      <location>{ 0, 20 }</location>
                    </Token>
                  </reference>
                  <child>
                    <Option>None</Option>
                  </child>
                  <pipe>
                    <Option>None</Option>
                  </pipe>
                </ReferenceExpression>
              </Option>
            </child>
            <pipe>
              <Option>None</Option>
            </pipe>
          </ReferenceExpression>
        </expr>
      </LetStatement>
    </stmt>
  </BlockNode>
  <TextNode>
    <text>
      <Token>
        <kind>StringLiteral</kind>
        <lexeme>"\nHello, "</lexeme>
        <location>{ 0, 27 }</location>
      </Token>
    </text>
  </TextNode>
  <BlockNode>
    <stmt>
      <SimpleStatement>
        <action>
          <Token>
            <kind>Action(Write)</kind>
            <lexeme>"write!"</lexeme>
            <location>{ 1, 10 }</location>
          </Token>
        </action>
        <expr>
          <Option>
            <ReferenceExpression>
              <reference>
                <Token>
                  <kind>Label</kind>
                  <lexeme>"user"</lexeme>
                  <location>{ 1, 17 }</location>
                </Token>
              </reference>
              <child>
                <Option>
                  <ReferenceExpression>
                    <reference>
                      <Token>
                        <kind>Label</kind>
                        <lexeme>"name"</lexeme>
                        <location>{ 1, 22 }</location>
                      </Token>
                    </reference>
                    <child>
                      <Option>None</Option>
                    </child>
                    <pipe>
                      <Option>
                        <Pipe>
                          <call>
                            <Call>
                              <function>
                                <Token>
                                  <kind>Label</kind>
                                  <lexeme>"capitalized"</lexeme>
                                  <location>{ 1, 29 }</location>
                                </Token>
                              </function>
                              <arguments>
                                <Option>None</Option>
                              </arguments>
                            </Call>
                          </call>
                          <next>
                            <Option>None</Option>
                          </next>
                        </Pipe>
                      </Option>
                    </pipe>
                  </ReferenceExpression>
                </Option>
              </child>
              <pipe>
                <Option>None</Option>
              </pipe>
            </ReferenceExpression>
          </Option>
        </expr>
      </SimpleStatement>
    </stmt>
  </BlockNode>
  <TextNode>
    <text>
      <Token>
        <kind>StringLiteral</kind>
        <lexeme>".\n\nYour cart ("</lexeme>
        <location>{ 1, 43 }</location>
      </Token>
    </text>
  </TextNode>
  <BlockNode>
    <stmt>
      <SimpleStatement>
        <action>
          <Token>
            <kind>Action(Write)</kind>
            <lexeme>"write!"</lexeme>
            <location>{ 3, 14 }</location>
          </Token>
        </action>
        <expr>
          <Option>
            <ReferenceExpression>
              <reference>
                <Token>
                  <kind>Label</kind>
                  <lexeme>"cart"</lexeme>
                  <location>{ 3, 21 }</location>
                </Token>
              </reference>
              <child>
                <Option>None</Option>
              </child>
              <pipe>
                <Option>
                  <Pipe>
                    <call>
                      <Call>
                        <function>
                          <Token>
                            <kind>Label</kind>
                            <lexeme>"length"</lexeme>
                            <location>{ 3, 28 }</location>
                          </Token>
                        </function>
                        <arguments>
                          <Option>None</Option>
                        </arguments>
                      </Call>
                    </call>
                    <next>
                      <Option>None</Option>
                    </next>
                  </Pipe>
                </Option>
              </pipe>
            </ReferenceExpression>
          </Option>
        </expr>
      </SimpleStatement>
    </stmt>
  </BlockNode>
  <TextNode>
    <text>
      <Token>
        <kind>StringLiteral</kind>
        <lexeme>"): \n"</lexeme>
        <location>{ 3, 37 }</location>
      </Token>
    </text>
  </TextNode>
  <BlockNode>
    <stmt>
      <RenderStatement>
        <pattern>
          <Option>
            <SimplePattern>
              <decl>
                <Token>
                  <kind>Label</kind>
                  <lexeme>"item"</lexeme>
                  <location>{ 4, 11 }</location>
                </Token>
              </decl>
            </SimplePattern>
          </Option>
        </pattern>
        <iterable>
          <Option>
            <ReferenceExpression>
              <reference>
                <Token>
                  <kind>Label</kind>
                  <lexeme>"cart"</lexeme>
                  <location>{ 4, 18 }</location>
                </Token>
              </reference>
              <child>
                <Option>None</Option>
              </child>
              <pipe>
                <Option>None</Option>
              </pipe>
            </ReferenceExpression>
          </Option>
        </iterable>
      </RenderStatement>
    </stmt>
  </BlockNode>
  <TextNode>
    <text>
      <Token>
        <kind>StringLiteral</kind>
        <lexeme>"\n  <li>"</lexeme>
        <location>{ 4, 25 }</location>
      </Token>
    </text>
  </TextNode>
  <BlockNode>
    <stmt>
      <SimpleStatement>
        <action>
          <Token>
            <kind>Action(Write)</kind>
            <lexeme>"write!"</lexeme>
            <location>{ 5, 9 }</location>
          </Token>
        </action>
        <expr>
          <Option>
            <ReferenceExpression>
              <reference>
                <Token>
                  <kind>Label</kind>
                  <lexeme>"item"</lexeme>
                  <location>{ 5, 16 }</location>
                </Token>
              </reference>
              <child>
                <Option>None</Option>
              </child>
              <pipe>
                <Option>None</Option>
              </pipe>
            </ReferenceExpression>
          </Option>
        </expr>
      </SimpleStatement>
    </stmt>
  </BlockNode>
  <TextNode>
    <text>
      <Token>
        <kind>StringLiteral</kind>
        <lexeme>"</li>\n"</lexeme>
        <location>{ 5, 23 }</location>
      </Token>
    </text>
  </TextNode>
  <BlockNode>
    <stmt>
      <SimpleStatement>
        <action>
          <Token>
            <kind>Action(End)</kind>
            <lexeme>"!"</lexeme>
            <location>{ 6, 2 }</location>
          </Token>
        </action>
        <expr>
          <Option>None</Option>
        </expr>
      </SimpleStatement>
    </stmt>
  </BlockNode>
</Ast>
